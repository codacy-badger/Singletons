{
  "api/Platform.Singletons.Global.html": {
    "href": "api/Platform.Singletons.Global.html",
    "title": "Class Global | LinksPlatform's Platform.Singletons Library",
    "keywords": "Class Global Inheritance Object Global Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Singletons Assembly : Platform.Singletons.dll Syntax public static class Global Fields | Improve this Doc View Source Trash Представляет поле-помойку, куда можно сбрасывать ненужные значения. В некоторых случаях это может помочь избежать нежелательной оптимизации (исключения записи в переменную в конце функции) и сделать вид, что значение действительно используется. Такое может быть полезно при реализации тестов на производительность. Declaration public static object Trash Field Value Type Description Object"
  },
  "api/Platform.Singletons.html": {
    "href": "api/Platform.Singletons.html",
    "title": "Namespace Platform.Singletons | LinksPlatform's Platform.Singletons Library",
    "keywords": "Namespace Platform.Singletons Classes Default<T> Представляет собой точку доступа к экземплярям типов по умолчанию (созданных с помощью конструктора без аргументов). Global Singleton Structs Singleton<T>"
  },
  "api/Platform.Singletons.Singleton.html": {
    "href": "api/Platform.Singletons.Singleton.html",
    "title": "Class Singleton | LinksPlatform's Platform.Singletons Library",
    "keywords": "Class Singleton Inheritance Object Singleton Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Singletons Assembly : Platform.Singletons.dll Syntax public static class Singleton Methods | Improve this Doc View Source Create<T>(IFactory<T>) Declaration public static Singleton<T> Create<T>(IFactory<T> factory) Parameters Type Name Description Platform.Interfaces.IFactory <T> factory Returns Type Description Singleton <T> Type Parameters Name Description T | Improve this Doc View Source Create<T>(Func<T>) Declaration public static Singleton<T> Create<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description Singleton <T> Type Parameters Name Description T | Improve this Doc View Source Get<T>(IFactory<T>) Declaration public static T Get<T>(IFactory<T> factory) Parameters Type Name Description Platform.Interfaces.IFactory <T> factory Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Get<T>(Func<T>) Declaration public static T Get<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description T Type Parameters Name Description T"
  },
  "api/Platform.Singletons.Default-1.html": {
    "href": "api/Platform.Singletons.Default-1.html",
    "title": "Class Default<T> | LinksPlatform's Platform.Singletons Library",
    "keywords": "Class Default<T> Представляет собой точку доступа к экземплярям типов по умолчанию (созданных с помощью конструктора без аргументов). Inheritance Object Default<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Singletons Assembly : Platform.Singletons.dll Syntax public static class Default<T> where T : new() Type Parameters Name Description T Тип экземпляра объекта. Fields | Improve this Doc View Source Instance Declaration public static readonly T Instance Field Value Type Description T Properties | Improve this Doc View Source ThreadInstance If you really need maximum performance, use this property. This property should create only one instance per thread. Declaration public static T ThreadInstance { get; } Property Value Type Description T"
  },
  "README.html": {
    "href": "README.html",
    "title": "Singletons | LinksPlatform's Platform.Singletons Library",
    "keywords": "Singletons LinksPlatform's Platform.Singletons Class Library. Namespace: Platform.Singletons Forked from: LinksPlatform/Helpers/Singletons NuGet package: Platform.Singletons Documentation PDF file with code for e-readers. Depend on Platform.Reflection Dependent libraries Platform.Scopes Platform.Data Platform.Data.Doublets Mystery files .travis.yml - Travis CI build configuration. docfx.json and toc.yml - DocFX build configuration. format-document.sh - script for formating tex file for generating PDF from it. format-csharp-files.py - script for formating single .cs file as a part of tex file. generate-pdf.sh - script that generates PDF with code for e-readers. publish-docs.sh - script that publishes generated documentation and PDF with code for e-readers to gh-pages branch. push-nuget.bat - Windows script for publishing current version of NuGet package."
  },
  "api/Platform.Singletons.Singleton-1.html": {
    "href": "api/Platform.Singletons.Singleton-1.html",
    "title": "Struct Singleton<T> | LinksPlatform's Platform.Singletons Library",
    "keywords": "Struct Singleton<T> Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Singletons Assembly : Platform.Singletons.dll Syntax public struct Singleton<T> Type Parameters Name Description T Constructors | Improve this Doc View Source Singleton(Func<T>) Declaration public Singleton(Func<T> creator) Parameters Type Name Description Func <T> creator Properties | Improve this Doc View Source Instance Declaration public T Instance { get; } Property Value Type Description T"
  }
}